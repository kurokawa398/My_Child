[
	
    {
        "question":"データベースの概念設計に用いられ，対象世界を，実体と実体間の関連という二つの概念で表現するデータモデルはどれか。",
        "answer1": "E-Rモデル",
        "answer2": "階層モデル",
        "answer3": "関係モデル",
        "answer4": "ネットワークモデル",
        "correct": "E-Rモデル",
        "comment": "E-R図(Entity-Relationship Model)は、データベース化の対象となる実体（エンティティ）と実体の持つ属性（アトリビュート）、実体間の関連（リレーションシップ）を表現した図です。任意のオブジェクトとその関連をデータモデル化することができますが、関係モデルとの親和性が非常に高いため、関係データベースの概念設計に一般的に利用されています。"
    },
    {
        "question":"関係データベースのデータ構造の説明として，適切なものはどれか。",
        "answer1": "親レコードと子レコードをポインタで結合する",
        "answer2": "タグを用いてデータの構造と意味を表す",
        "answer3": "データと手続を一体化(カプセル化)してもつ",
        "answer4": "データを2次元の表によって表現する",
        "correct": "データを2次元の表によって表現する",
        "comment": "関係データベース(RDB:RelationalDataBase)は、データ構造を平坦な2次元の表によって定義するモデルで、現在最も広く利用されているデータベースモデルです。関係データベースでは、表を「テーブル」、行を「レコード」または「タプル」、列を「カラム」または「フィールド」と呼び、複数の表の関連は主キー同士または主キーと外部キーによって行われます。"
    },
    {
        "question":"DBMSにおいて，スキーマを決める機能はどれか。",
        "answer1": "機密保護機能",
        "answer2": "障害回復機能",
        "answer3": "定義機能",
        "answer4": "保全機能",
        "correct": "機密保護機能",
        "comment": "スキーマ(schema)とは、データの内容，データの論理構造，記憶形式や編成などデータベースの構造を記述したものです。これを決めるDBMSの機能は「定義機能」が適切です。"
    },
    {
        "question":"Javaのアプリケーションプログラムがデータベースにアクセスするための標準的なAPI(Application Program Interface)はどれか。",
        "answer1": "HTML",
        "answer2": "JavaVM",
        "answer3": "JDBC",
        "answer4": "SQL",
        "correct": "JDBC",
        "comment": "JDBC(Java Database Connectivity)は、Javaプログラムからリレーショナルデータベースに接続のためのAPIです。"
    },
    {
        "question":"ビッグデータの活用例として，大量のデータから統計学的手法などを用いて新たな知識(傾向やパターン)を見つけ出すプロセスはどれか。",
        "answer1": "データウェアハウス",
        "answer2": "データディクショナリ",
        "answer3": "データマイニング",
        "answer4": "メタデータ",
        "correct": "データマイニング",
        "comment": "データマイニング(Data Mining)は、データウェアハウスに蓄積されている大量の生データを統計学的手法で分析し、今まで知られていなかったデータの規則や因果関係を見つけ出す手法です。"
    },
    {
        "question":"データベースのアクセス効率を低下させないために，定期的に実施する処理はどれか。",
        "answer1": "再編成",
        "answer2": "データベースダンプ",
        "answer3": "バックアップ",
        "answer4": "ロールバック",
        "correct": "再編成",
        "comment": "データベースの処理効率は、レコードの追加や削除の繰り返しによるガーベジの増加や、同じレコードが非連続の場所に格納されることによって徐々に低下していきます。このような状態を改善するために定期的に行われるのが再編成で、低下した処理効率を回復させることができます。"
    },
    {
        "question":"分散データベースシステムにおいて，一連のトランザクション処理を行う複数サイトに更新処理が確定可能かどうかを問い合わせ，すべてのサイトが確定可能である場合，更新処理を確定する方式はどれか。",
        "answer1": "2相コミット",
        "answer2": "排他制御",
        "answer3": "ロールバック",
        "answer4": "ロールフォワード",
        "correct": "2相コミット",
        "comment": "2相コミット(Two Phase Commit)は、トランザクションのコミットを次の2つの段階に分けて行うことで、分散データベース環境でのトランザクションの原子性・一貫性を保証する仕組みです。"
    },
    {
        "question":"関係モデルにおいて，関係から特定の属性だけを取り出す演算はどれか。",
        "answer1": "結合(join)",
        "answer2": "射影(projection)",
        "answer3": "選択(selection)",
        "answer4": "和(union)",
        "correct": "射影(projection)",
        "comment": "結合\n複数の表を共通する属性で結合して1つの表にする操作\n射影\n表から指定された列(属性)を抽出する操作\n選択\n表から指定された行(タプル)を抽出する操作\n和\n同じ属性を持つ2つの表の行を足し合わせて、1つの新しい表をつくりだす操作"
    },
    {
        "question":"データモデルにおいて，データの関係を木構造で表すものはどれか。",
        "answer1": "E-Rモデル",
        "answer2": "階層モデル",
        "answer3": "関係モデル",
        "answer4": "ネットワークモデル",
        "correct": "階層モデル",
        "comment": "階層モデルは、データを木構造(階層構造)によって表現します。"
    },
    {
        "question":"関係モデルとその実装である関係データベースの対応に関する記述のうち，適切なものはどれか。",
        "answer1": "関係は，表に対応付けられる",
        "answer2": "属性も列も，左から右に順序付けられる",
        "answer3": "タプルも行も，ともに重複しない",
        "answer4": "定義域は，文字型又は文字列型に対応付けられる",
        "correct": "関係は，表に対応付けられる",
        "comment": "関係モデルは、データの関係を数学的な集合論と述語論によって表現するモデルで、関係データベースは関係モデルをコンピュータ上に実装したものです。それぞれの要素は次のように対応しています"
    }
        
]
